"""Create user and profile tables

Revision ID: 59c7d125495d
Revises: 
Create Date: 2024-11-16 02:23:15.208299

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '59c7d125495d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_ts', sa.DateTime(), nullable=False),
    sa.Column('modified_ts', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('userprofile',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('current_weight', sa.Float(), nullable=True),
    sa.Column('target_weight', sa.Float(), nullable=True),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'PREFER_NOT_TO_SAY', name='gender'), nullable=True),
    sa.Column('activity_level', sa.Enum('SEDENTARY', 'LIGHTLY_ACTIVE', 'MODERATELY_ACTIVE', 'VERY_ACTIVE', 'EXTREMELY_ACTIVE', name='activitylevel'), nullable=True),
    sa.Column('body_fat_percentage', sa.Float(), nullable=True),
    sa.Column('waist_circumference', sa.Float(), nullable=True),
    sa.Column('blood_type', sa.Enum('A_POSITIVE', 'A_NEGATIVE', 'B_POSITIVE', 'B_NEGATIVE', 'O_POSITIVE', 'O_NEGATIVE', 'AB_POSITIVE', 'AB_NEGATIVE', name='bloodtype'), nullable=True),
    sa.Column('daily_calorie_target', sa.Integer(), nullable=True),
    sa.Column('health_conditions', sa.JSON(), nullable=True),
    sa.Column('dietary_restrictions', sa.JSON(), nullable=True),
    sa.Column('medications', sa.JSON(), nullable=True),
    sa.Column('past_injuries', sa.JSON(), nullable=True),
    sa.Column('family_health_history', sa.JSON(), nullable=True),
    sa.Column('sleep_hours', sa.Float(), nullable=True),
    sa.Column('stress_level', sa.Integer(), nullable=True),
    sa.Column('meal_count_target', sa.Integer(), nullable=True),
    sa.Column('supplement_use', sa.JSON(), nullable=True),
    sa.Column('food_allergies', sa.JSON(), nullable=True),
    sa.Column('food_intolerances', sa.JSON(), nullable=True),
    sa.Column('preferred_cuisines', sa.JSON(), nullable=True),
    sa.Column('meal_preferences', sa.JSON(), nullable=True),
    sa.Column('exercise_experience', sa.Enum('BEGINNER', 'INTERMEDIATE', 'ADVANCED', 'EXPERT', name='experiencelevel'), nullable=True),
    sa.Column('preferred_exercise_types', sa.JSON(), nullable=True),
    sa.Column('exercise_frequency_target', sa.Integer(), nullable=True),
    sa.Column('workout_time_preference', sa.Enum('MORNING', 'AFTERNOON', 'EVENING', 'NO_PREFERENCE', name='workouttimepreference'), nullable=True),
    sa.Column('fitness_goals', sa.JSON(), nullable=True),
    sa.Column('weight_goal_rate', sa.Float(), nullable=True),
    sa.Column('target_date', sa.DateTime(), nullable=True),
    sa.Column('motivation_factors', sa.JSON(), nullable=True),
    sa.Column('use_metric', sa.Boolean(), nullable=True),
    sa.Column('notification_preferences', sa.JSON(), nullable=True),
    sa.Column('tracking_frequency', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_ts', sa.DateTime(), nullable=False),
    sa.Column('modified_ts', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_userprofile_id'), 'userprofile', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_userprofile_id'), table_name='userprofile')
    op.drop_table('userprofile')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
