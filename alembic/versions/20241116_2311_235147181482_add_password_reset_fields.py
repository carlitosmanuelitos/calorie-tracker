"""add_password_reset_fields

Revision ID: 235147181482
Revises: 59c7d125495d
Create Date: 2024-11-16 23:11:05.687175

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = '235147181482'
down_revision = '59c7d125495d'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_userprofile_id', table_name='userprofile')
    op.drop_table('userprofile')
    op.drop_index('ix_user_email', table_name='user')
    op.drop_index('ix_user_id', table_name='user')
    op.drop_index('ix_user_username', table_name='user')
    op.drop_table('user')
    op.add_column('users', sa.Column('reset_token', sa.String(), nullable=True))
    op.add_column('users', sa.Column('reset_token_expires', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_users_reset_token'), 'users', ['reset_token'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_reset_token'), table_name='users')
    op.drop_column('users', 'reset_token_expires')
    op.drop_column('users', 'reset_token')
    op.create_table('user',
    sa.Column('email', sa.VARCHAR(), nullable=False),
    sa.Column('username', sa.VARCHAR(), nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('is_verified', sa.BOOLEAN(), nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_ts', sa.DATETIME(), nullable=False),
    sa.Column('modified_ts', sa.DATETIME(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_user_username', 'user', ['username'], unique=False)
    op.create_index('ix_user_id', 'user', ['id'], unique=False)
    op.create_index('ix_user_email', 'user', ['email'], unique=False)
    op.create_table('userprofile',
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('age', sa.INTEGER(), nullable=True),
    sa.Column('height', sa.FLOAT(), nullable=True),
    sa.Column('current_weight', sa.FLOAT(), nullable=True),
    sa.Column('target_weight', sa.FLOAT(), nullable=True),
    sa.Column('gender', sa.VARCHAR(length=17), nullable=True),
    sa.Column('activity_level', sa.VARCHAR(length=17), nullable=True),
    sa.Column('body_fat_percentage', sa.FLOAT(), nullable=True),
    sa.Column('waist_circumference', sa.FLOAT(), nullable=True),
    sa.Column('blood_type', sa.VARCHAR(length=11), nullable=True),
    sa.Column('daily_calorie_target', sa.INTEGER(), nullable=True),
    sa.Column('health_conditions', sqlite.JSON(), nullable=True),
    sa.Column('dietary_restrictions', sqlite.JSON(), nullable=True),
    sa.Column('medications', sqlite.JSON(), nullable=True),
    sa.Column('past_injuries', sqlite.JSON(), nullable=True),
    sa.Column('family_health_history', sqlite.JSON(), nullable=True),
    sa.Column('sleep_hours', sa.FLOAT(), nullable=True),
    sa.Column('stress_level', sa.INTEGER(), nullable=True),
    sa.Column('meal_count_target', sa.INTEGER(), nullable=True),
    sa.Column('supplement_use', sqlite.JSON(), nullable=True),
    sa.Column('food_allergies', sqlite.JSON(), nullable=True),
    sa.Column('food_intolerances', sqlite.JSON(), nullable=True),
    sa.Column('preferred_cuisines', sqlite.JSON(), nullable=True),
    sa.Column('meal_preferences', sqlite.JSON(), nullable=True),
    sa.Column('exercise_experience', sa.VARCHAR(length=12), nullable=True),
    sa.Column('preferred_exercise_types', sqlite.JSON(), nullable=True),
    sa.Column('exercise_frequency_target', sa.INTEGER(), nullable=True),
    sa.Column('workout_time_preference', sa.VARCHAR(length=13), nullable=True),
    sa.Column('fitness_goals', sqlite.JSON(), nullable=True),
    sa.Column('weight_goal_rate', sa.FLOAT(), nullable=True),
    sa.Column('target_date', sa.DATETIME(), nullable=True),
    sa.Column('motivation_factors', sqlite.JSON(), nullable=True),
    sa.Column('use_metric', sa.BOOLEAN(), nullable=True),
    sa.Column('notification_preferences', sqlite.JSON(), nullable=True),
    sa.Column('tracking_frequency', sqlite.JSON(), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_ts', sa.DATETIME(), nullable=False),
    sa.Column('modified_ts', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index('ix_userprofile_id', 'userprofile', ['id'], unique=False)
    # ### end Alembic commands ###
